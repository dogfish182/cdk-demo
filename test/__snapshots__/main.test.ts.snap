// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "Endpoint8024A810": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "EndpointEEF1FD8F",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "EndpointDeploymentStageprodB78BEEA0",
            },
            "/",
          ],
        ],
      },
    },
    "ViewHitCounterViewerEndpointCA1B1E4B": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "EndpointANY485C938B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "HelloHitCounterHitCountHandler2475EAC2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "EndpointEEF1FD8F",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "EndpointANYApiPermissionTesttestEndpoint50AA2441ANY759FE73B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHitCounterHitCountHandler2475EAC2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "EndpointEEF1FD8F",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointANYApiPermissiontestEndpoint50AA2441ANY89B723D8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHitCounterHitCountHandler2475EAC2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "EndpointEEF1FD8F",
              },
              "/",
              Object {
                "Ref": "EndpointDeploymentStageprodB78BEEA0",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointAccountB8304247": Object {
      "DependsOn": Array [
        "EndpointEEF1FD8F",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "EndpointCloudWatchRoleC3C64E0F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "EndpointCloudWatchRoleC3C64E0F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EndpointDeployment318525DA0f2a7f4607d43f6dd96fc7f9c9788c1d": Object {
      "DependsOn": Array [
        "EndpointproxyANYC09721C5",
        "Endpointproxy39E2174E",
        "EndpointANY485C938B",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "EndpointDeploymentStageprodB78BEEA0": Object {
      "DependsOn": Array [
        "EndpointAccountB8304247",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "EndpointDeployment318525DA0f2a7f4607d43f6dd96fc7f9c9788c1d",
        },
        "RestApiId": Object {
          "Ref": "EndpointEEF1FD8F",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "EndpointEEF1FD8F": Object {
      "Properties": Object {
        "Name": "Endpoint",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "Endpointproxy39E2174E": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "EndpointEEF1FD8F",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "EndpointproxyANYApiPermissionTesttestEndpoint50AA2441ANYproxy067D52E7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHitCounterHitCountHandler2475EAC2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "EndpointEEF1FD8F",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointproxyANYApiPermissiontestEndpoint50AA2441ANYproxy58283A2E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "HelloHitCounterHitCountHandler2475EAC2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "EndpointEEF1FD8F",
              },
              "/",
              Object {
                "Ref": "EndpointDeploymentStageprodB78BEEA0",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EndpointproxyANYC09721C5": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "HelloHitCounterHitCountHandler2475EAC2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "Endpointproxy39E2174E",
        },
        "RestApiId": Object {
          "Ref": "EndpointEEF1FD8F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "HelloHandler2E4FBA4D": Object {
      "DependsOn": Array [
        "HelloHandlerServiceRole11EF7C63",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6d190f53c60baa8982b2ca2f9f480ceb25a95341cb9acb46cf590172edafe152.zip",
        },
        "Handler": "hello.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "HelloHandlerServiceRole11EF7C63",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloHandlerServiceRole11EF7C63": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HelloHitCounterHitCountHandler2475EAC2": Object {
      "DependsOn": Array [
        "HelloHitCounterHitCountHandlerServiceRoleDefaultPolicy0295D032",
        "HelloHitCounterHitCountHandlerServiceRole42AAF829",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6d190f53c60baa8982b2ca2f9f480ceb25a95341cb9acb46cf590172edafe152.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "DOWNSTREAM_FUNCTION_NAME": Object {
              "Ref": "HelloHandler2E4FBA4D",
            },
            "HITS_TABLE_NAME": Object {
              "Ref": "HelloHitCounterHits7AAEBF80",
            },
          },
        },
        "Handler": "hitcounter.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "HelloHitCounterHitCountHandlerServiceRole42AAF829",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloHitCounterHitCountHandlerServiceRole42AAF829": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HelloHitCounterHitCountHandlerServiceRoleDefaultPolicy0295D032": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "HelloHitCounterHits7AAEBF80",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "HelloHandler2E4FBA4D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "HelloHitCounterHitCountHandlerServiceRoleDefaultPolicy0295D032",
        "Roles": Array [
          Object {
            "Ref": "HelloHitCounterHitCountHandlerServiceRole42AAF829",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "HelloHitCounterHits7AAEBF80": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "path",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "path",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "SSESpecification": Object {
          "SSEEnabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "StorageBucketjimmysdancefestivaltickets99E8D5CC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "StorageBucketjimmysdancefestivalticketsKey002A27AA",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "jimmys-dance-festival-tickets-",
              Object {
                "Ref": "AWS::AccountId",
              },
            ],
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StorageBucketjimmysdancefestivalticketsKey002A27AA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "Created by test/StorageBucketjimmys-dance-festival-tickets",
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StorageBucketmikesbigbucketogravyA82D0197": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "StorageBucketmikesbigbucketogravyKey55861A34",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "mikes-big-bucket-o-gravy-",
              Object {
                "Ref": "AWS::AccountId",
              },
            ],
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StorageBucketmikesbigbucketogravyKey55861A34": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "Created by test/StorageBucketmikes-big-bucket-o-gravy",
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "ViewHitCounterRendered9C783E45": Object {
      "DependsOn": Array [
        "ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83",
        "ViewHitCounterRenderedServiceRole254DB4EA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e2d9f4c587faa240510bb9cd1c0afe3112663d6336529432a852f5e452cf6456.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "SORT_BY": "-hits",
            "TABLE_NAME": Object {
              "Ref": "HelloHitCounterHits7AAEBF80",
            },
            "TITLE": "Hello hits",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterRenderedServiceRole254DB4EA",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ViewHitCounterRenderedServiceRole254DB4EA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "HelloHitCounterHits7AAEBF80",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83",
        "Roles": Array [
          Object {
            "Ref": "ViewHitCounterRenderedServiceRole254DB4EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ViewHitCounterViewerEndpoint5A0EF326": Object {
      "Properties": Object {
        "Name": "ViewerEndpoint",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ViewHitCounterViewerEndpointANY66F2285B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ViewHitCounterRendered9C783E45",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterViewerEndpoint5A0EF326",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ViewHitCounterViewerEndpointANYApiPermissionTesttestViewHitCounterViewerEndpoint24F15808ANY1A79384E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterRendered9C783E45",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ViewHitCounterViewerEndpointANYApiPermissiontestViewHitCounterViewerEndpoint24F15808ANY48ABB347": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterRendered9C783E45",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
              },
              "/",
              Object {
                "Ref": "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ViewHitCounterViewerEndpointAccount0B75E76A": Object {
      "DependsOn": Array [
        "ViewHitCounterViewerEndpoint5A0EF326",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterViewerEndpointCloudWatchRole87B94D6A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "ViewHitCounterViewerEndpointCloudWatchRole87B94D6A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ViewHitCounterViewerEndpointDeployment1CE7C576aaeb52ee3dd5ec3ab243f366d5eae8a9": Object {
      "DependsOn": Array [
        "ViewHitCounterViewerEndpointproxyANYFF4B8F5B",
        "ViewHitCounterViewerEndpointproxy2F4C239F",
        "ViewHitCounterViewerEndpointANY66F2285B",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7": Object {
      "DependsOn": Array [
        "ViewHitCounterViewerEndpointAccount0B75E76A",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "ViewHitCounterViewerEndpointDeployment1CE7C576aaeb52ee3dd5ec3ab243f366d5eae8a9",
        },
        "RestApiId": Object {
          "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ViewHitCounterViewerEndpointproxy2F4C239F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterViewerEndpoint5A0EF326",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ViewHitCounterViewerEndpointproxyANYApiPermissionTesttestViewHitCounterViewerEndpoint24F15808ANYproxyDB323197": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterRendered9C783E45",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ViewHitCounterViewerEndpointproxyANYApiPermissiontestViewHitCounterViewerEndpoint24F15808ANYproxy5429D184": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ViewHitCounterRendered9C783E45",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
              },
              "/",
              Object {
                "Ref": "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ViewHitCounterViewerEndpointproxyANYFF4B8F5B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ViewHitCounterRendered9C783E45",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ViewHitCounterViewerEndpointproxy2F4C239F",
        },
        "RestApiId": Object {
          "Ref": "ViewHitCounterViewerEndpoint5A0EF326",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
